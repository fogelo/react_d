{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContanier.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContanier.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","mainContent","src","messages","likeCount","MyPosts","postsElements","posts","map","p","post","message","AddNewPostForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContanier","profilesPage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","Preloader","fullName","photos","large","mainPhoto","isOwner","type","target","files","length","savePhoto","aboutMe","contacts","instagram","lookingForAJob","Profile","ProfileContanier","userId","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","id","withRouter"],"mappings":"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","file":"static/js/3.6b4884c1.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux'\n\n\nlet mapStateToPropsForRedirect = (state) => { //настраивает данные, которые мы возьмем из state\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Post_mainContent__1qSVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__1Fgjo\"};","import classes from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n      \n      <div className = {classes.mainContent}>\n          <div>\n            <img src = 'http://archilab.online/images/1/123.jpg'></img>\n            {props.messages}\n          </div>\n          <div>{`like ${props.likeCount}`}</div>\n      </div>\n    )\n}\n\nexport default Post","import React from 'react';\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControl';\n\nclass MyPosts extends React.Component {\n\n  render() {\n    let onAddPost = (values) => {\n      this.props.addPost(values.newPostText);\n    }\n\n    let postsElements = this.props.posts.map(p => <Post className={classes.post} messages={p.message} likeCount={p.likeCount}></Post>)\n\n    return (\n      <div className={classes.mainContent}>\n        <h3>My Posts</h3>\n        <AddNewPostForm onSubmit={onAddPost}></AddNewPostForm>\n        <div className={classes.posts}>\n          {postsElements}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst maxLength10 = maxLengthCreator(10)\nconst addNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        name='newPostText'\n        placeholder={'Enter your post'}\n        validate={[required, maxLength10]}></Field>\n      <div><button>add</button></div>\n    </form>\n  )\n}\n\nconst AddNewPostForm = reduxForm({ form: 'ProfileAddNewPostForm' })(addNewPostForm)\n\nexport default MyPosts","import React from 'react';\nimport { addPostActionCreator, } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux'\n\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilesPage.posts,\n    newPostText: state.profilesPage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    },\n\n  }\n}\n\nconst MyPostsContanier = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContanier","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n// import classes from './ProfileStatus.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    /*     //useState возвращает массив\n        let stateArray = useState(false)\n        debugger\n        let editMode = stateArray[0] //занчение, которое кидаем в useState\n        let setEditMode = stateArray[1] //функция, которое будет менять значение, \n                                        //после того как эта функция изменит значение реакт сделает перерисовку всей компоненты */\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[])\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deActivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div> <span>  </span>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\n                </div>}\n\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus={true} value={status} />\n                </div>}\n\n        </div>\n    )\n}\nexport default ProfileStatusWithHooks","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport classes from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader></Preloader>\n  }\n  const mainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0])\n    }\n  }\n  return (\n    <div>\n      <div className={classes.ProfileInfo}>\n        <div>{'Имя: ' + props.profile.fullName}</div>\n        <img src={props.profile.photos.large != null ? props.profile.photos.large : 'https://socpartnerstvo.org/img/avatar_male.png'}\n          className={classes.mainPhoto} />\n        {props.isOwner && <input type={'file'} onChange={mainPhotoSelected} />}\n        <div>{'Обо мне: ' + props.profile.aboutMe}</div>\n        <div>{'Мой инстаграмм: ' + props.profile.contacts.instagram}</div>\n        <div>{`${props.profile.lookingForAJob ? 'Ищу работу' : \"Не ищу работу\"}`}</div>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInfo","import MyPostsContanier from \"./MyPosts/MyPostsContanier\";\nimport classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        savePhoto={props.savePhoto}\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      ></ProfileInfo>\n      <MyPostsContanier></MyPostsContanier>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport * as axios from \"axios\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUsersProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router\";\nimport { usersAPI } from \"../../api/api\";\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContanier extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        //меняем url\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUsersProfile(userId);\n    this.props.getStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      ></Profile>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilesPage.profile,\n  status: state.profilesPage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto }),\n  withRouter\n  //withAuthRedirect\n)(ProfileContanier);\n"],"sourceRoot":""}